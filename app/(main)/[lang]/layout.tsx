import { headers, cookies } from 'next/headers';
import { Inter } from 'next/font/google';
import { getDictionary } from 'dictionaries';
import { AppHeader } from '@components/AppHeader';
import { useUserStore } from '@user/presentation/user-store';
import { UserStoreInitializer } from '@user/presentation/components/UserStoreInitializer';
import { userPrivateFinderByEmail } from '@user/application/user-finder-by-email';
import { countryListFinder } from '@country/application/country-list-finder';
import { CountriesStoreInitializer } from '@country/presentation/components/CountriesStoreInitializer';
import { useCountriesStore } from '@country/presentation/country-store';
import { DictionaryStoreInitializer } from '@shared/presentation/components/DictionaryStoreInitializer';
import { useDictionaryStore } from '@shared/presentation/stores/dictionary-store';
import { ChakraProvider } from '@shared/presentation/chakra-ui/chakra-provider';
import { Locale } from '@shared/domain/locale';
import { getSession } from '@shared/presentation/services/auth-service';
import '../../global.css';

const inter = Inter({ subsets: ['latin'] });

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

const AppRootLayout = async ({
  children,
  params,
}: {
  children: React.ReactNode;
  params: { lang: Locale };
}) => {
  const session = await getSession(headers().get('cookie') ?? '');

  const [countries, dictionary, user] = await Promise.all([
    countryListFinder({ isAvailableToSearch: true }),
    getDictionary(params.lang),
    session?.user?.email
      ? userPrivateFinderByEmail(session.user.email)
      : Promise.resolve(null),
  ]);

  const searchCountry = cookies().get('searchCountry')?.value ?? '';

  useUserStore.setState(user || { preferences: { searchCountry } });
  useCountriesStore.setState({ countries });
  useDictionaryStore.setState(dictionary);

  return (
    <html lang="en">
      <body className={inter.className}>
        <DictionaryStoreInitializer dictionary={dictionary} />
        <CountriesStoreInitializer countries={countries} />
        <UserStoreInitializer
          {...(user || { preferences: { searchCountry } })}
        />
        <ChakraProvider>
          <AppHeader />
          {children}
        </ChakraProvider>
      </body>
    </html>
  );
};

export default AppRootLayout;
